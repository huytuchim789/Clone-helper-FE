{"ast":null,"code":"var _jsxFileName = \"D:\\\\stackoverflow-clone\\\\client\\\\components\\\\user-card\\\\avatar-card\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { publicFetch } from '../../../util/fetcher';\nimport { Spinner } from '../../icons';\nimport styles from './avatar-card.module.css';\nconst UserAvatar = ({\n  username\n}) => {\n  const {\n    0: userInfo,\n    1: setUserInfo\n  } = useState(null);\n  const {\n    isAdmin\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/user/${username}`);\n      setUserInfo(data);\n    };\n    fetchUser();\n  }, [username]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.avatarCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, !userInfo ? __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })) : __jsx(\"div\", {\n    className: styles.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/users/[username]\",\n    as: `/users/${username}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: `https://secure.gravatar.com/avatar/${userInfo.id}?s=164&d=identicon`,\n    alt: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })))), __jsx(\"h2\", {\n    className: styles.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, username), !userInfo ? __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })) : __jsx(\"div\", {\n    className: styles.created,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Created:\", ' ', __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, formatDistanceToNowStrict(new Date(userInfo.created), {\n    addSuffix: true\n  }))), isAdmin && __jsx(Button, {\n    style: {\n      backgroundColor: 'red'\n    },\n    primary: true,\n    onClick: blockUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Block\"))));\n};\nexport default UserAvatar;","map":{"version":3,"names":["React","useEffect","useState","Link","formatDistanceToNowStrict","publicFetch","Spinner","styles","UserAvatar","username","userInfo","setUserInfo","isAdmin","useContext","AuthContext","fetchUser","data","get","avatarCard","avatar","id","created","Date","addSuffix","backgroundColor","blockUser"],"sources":["D:/stackoverflow-clone/client/components/user-card/avatar-card/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Link from 'next/link'\r\nimport formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict'\r\n\r\nimport { publicFetch } from '../../../util/fetcher'\r\n\r\nimport { Spinner } from '../../icons'\r\n\r\nimport styles from './avatar-card.module.css'\r\n\r\nconst UserAvatar = ({ username }) => {\r\n  const [userInfo, setUserInfo] = useState(null)\r\n  const { isAdmin } = useContext(AuthContext)\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const { data } = await publicFetch.get(`/user/${username}`)\r\n      setUserInfo(data)\r\n    }\r\n\r\n    fetchUser()\r\n  }, [username])\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.avatarCard}>\r\n        {!userInfo ? (\r\n          <div className=\"loading\">\r\n            <Spinner />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.avatar}>\r\n            <Link href=\"/users/[username]\" as={`/users/${username}`}>\r\n              <a>\r\n                <img\r\n                  src={`https://secure.gravatar.com/avatar/${userInfo.id}?s=164&d=identicon`}\r\n                  alt={username}\r\n                />\r\n              </a>\r\n            </Link>\r\n          </div>\r\n        )}\r\n        <h2 className={styles.username}>{username}</h2>\r\n        {!userInfo ? (\r\n          <div className=\"loading\">\r\n            <Spinner />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.created}>\r\n            <p>\r\n              Created:{' '}\r\n              <span>\r\n                {formatDistanceToNowStrict(new Date(userInfo.created), {\r\n                  addSuffix: true\r\n                })}\r\n              </span>\r\n            </p>\r\n            {isAdmin && (\r\n              <Button\r\n                style={{ backgroundColor: 'red' }}\r\n                primary\r\n                onClick={blockUser}\r\n              >\r\n                Block\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserAvatar\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,yBAAyB,MAAM,oCAAoC;AAE1E,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,MAAM,MAAM,0BAA0B;AAE7C,MAAMC,UAAU,GAAG,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC,MAAM;IAAA,GAACC,QAAQ;IAAA,GAAEC;EAAW,IAAIT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEU;EAAQ,CAAC,GAAGC,UAAU,CAACC,WAAW,CAAC;EAE3Cb,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,YAAY;MAC5B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMX,WAAW,CAACY,GAAG,CAAE,SAAQR,QAAS,EAAC,CAAC;MAC3DE,WAAW,CAACK,IAAI,CAAC;IACnB,CAAC;IAEDD,SAAS,EAAE;EACb,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAK,SAAS,EAAEF,MAAM,CAACW,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/B,CAACR,QAAQ,GACR;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtB,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACP,GAEN;IAAK,SAAS,EAAEH,MAAM,CAACY,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,IAAI;IAAC,IAAI,EAAC,mBAAmB;IAAC,EAAE,EAAG,UAASV,QAAS,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IACE,GAAG,EAAG,sCAAqCC,QAAQ,CAACU,EAAG,oBAAoB;IAC3E,GAAG,EAAEX,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACd,CACA,CACC,CAEV,EACD;IAAI,SAAS,EAAEF,MAAM,CAACE,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,QAAQ,CAAM,EAC9C,CAACC,QAAQ,GACR;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtB,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACP,GAEN;IAAK,SAAS,EAAEH,MAAM,CAACc,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eACW,GAAG,EACZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGjB,yBAAyB,CAAC,IAAIkB,IAAI,CAACZ,QAAQ,CAACW,OAAO,CAAC,EAAE;IACrDE,SAAS,EAAE;EACb,CAAC,CAAC,CACG,CACL,EACHX,OAAO,IACN,MAAC,MAAM;IACL,KAAK,EAAE;MAAEY,eAAe,EAAE;IAAM,CAAE;IAClC,OAAO;IACP,OAAO,EAAEC,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAItB,CAEJ,CACG,CACF;AAEV,CAAC;AAED,eAAejB,UAAU"},"metadata":{},"sourceType":"module"}