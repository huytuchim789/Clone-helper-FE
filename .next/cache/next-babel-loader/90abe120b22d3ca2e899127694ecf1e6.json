{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\TUYEN\\\\Documents\\\\ITSS\\\\Clone-helper-FE\\\\components\\\\post\\\\comment-list\\\\comment-item\\\\index.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useContext, useState } from 'react';\nimport Link from 'next/link';\nimport format from 'date-fns/format';\nimport { AuthContext } from '../../../../store/auth';\nimport { FetchContext } from '../../../../store/fetch';\nimport styles from './comment-item.module.css';\nimport { Space } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport TextArea from '../../../textarea';\nimport Button from '../../../button';\nvar CommentItem = function CommentItem(_ref) {\n  _s();\n  var _authState$userInfo;\n  var author = _ref.author,\n    created = _ref.created,\n    isOwner = _ref.isOwner,\n    answerId = _ref.answerId,\n    questionId = _ref.questionId,\n    commentId = _ref.commentId,\n    setQuestion = _ref.setQuestion,\n    children = _ref.children;\n  var _useContext = useContext(AuthContext),\n    authState = _useContext.authState,\n    isAdmin = _useContext.isAdmin;\n  var _useContext2 = useContext(FetchContext),\n    authAxios = _useContext2.authAxios;\n  var _useState = useState(false),\n    editMode = _useState[0],\n    setEditMode = _useState[1];\n  var handleDeleteComment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res, _yield$authAxios$dele, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = window.confirm('Are you sure delete your comment?');\n              if (!res) {\n                _context.next = 7;\n                break;\n              }\n              _context.next = 4;\n              return authAxios[\"delete\"](answerId ? \"/comment/\".concat(questionId, \"/\").concat(answerId, \"/\").concat(commentId) : \"/comment/\".concat(questionId, \"/\").concat(commentId));\n            case 4:\n              _yield$authAxios$dele = _context.sent;\n              data = _yield$authAxios$dele.data;\n              setQuestion(data);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function handleDeleteComment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleEditComment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setEditMode(true);\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function handleEditComment() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return __jsx(\"div\", {\n    className: styles.commentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, !editMode ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, children, \" \\u2013\"), \" \\xA0\") : __jsx(Formik, {\n    initialValues: {\n      comment: children\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(values, _ref4) {\n        var setStatus, resetForm, _yield$authAxios$put, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setStatus = _ref4.setStatus, resetForm = _ref4.resetForm;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return authAxios.put(answerId ? \"/comment/\".concat(questionId, \"/\").concat(answerId, \"/\").concat(commentId) : \"/comment/\".concat(questionId, \"/\").concat(commentId), values);\n              case 4:\n                _yield$authAxios$put = _context3.sent;\n                data = _yield$authAxios$put.data;\n                setQuestion(data);\n                resetForm({});\n                setEditMode(false);\n                _context3.next = 14;\n                break;\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](1);\n                setStatus(_context3.t0.response.data.message);\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 11]]);\n      }));\n      return function (_x, _x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    validationSchema: Yup.object({\n      comment: Yup.string().required('comment is missing.').min(6, 'comment must be at least 6 characters.').max(1000, 'comment cannot be longer than 1000 characters.')\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, function (_ref6) {\n    var values = _ref6.values,\n      errors = _ref6.errors,\n      touched = _ref6.touched,\n      status = _ref6.status,\n      handleChange = _ref6.handleChange,\n      handleBlur = _ref6.handleBlur,\n      handleSubmit = _ref6.handleSubmit,\n      isSubmitting = _ref6.isSubmitting;\n    return __jsx(\"form\", {\n      className: styles.container,\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(TextArea, {\n      name: \"comment\",\n      autoComplete: \"off\",\n      value: values.comment,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.comment && errors.comment,\n      errorMessage: errors.comment && errors.comment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }), __jsx(\"p\", {\n      className: styles.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, status), __jsx(Space, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      className: styles.button,\n      type: \"submit\",\n      primary: true,\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Edit Comment\"), __jsx(Button, {\n      onClick: function onClick() {\n        setEditMode(false);\n      },\n      type: \"text\",\n      className: styles[\"delete\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Cancel\")));\n  }), __jsx(Link, {\n    href: \"/users/[user]\",\n    as: \"/users/\".concat(author),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: isOwner ? styles.owner : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, author)), \"\\xA0\", __jsx(\"p\", {\n    className: styles.dateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, format(new Date(created), \"MMM dd'`'yy 'at' k':'mm\"), ' '), (((_authState$userInfo = authState.userInfo) === null || _authState$userInfo === void 0 ? void 0 : _authState$userInfo.username) === author || isAdmin()) && !editMode && __jsx(Space, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: styles[\"delete\"],\n    onClick: function onClick() {\n      return handleDeleteComment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"delete\"), __jsx(\"a\", {\n    onClick: function onClick() {\n      return handleEditComment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"edit\")));\n};\n_s(CommentItem, \"YSOHtMfyWzbX9fecjA6YDKa+CC8=\");\n_c = CommentItem;\nexport default CommentItem;\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["React","useContext","useState","Link","format","AuthContext","FetchContext","styles","Space","Formik","Yup","TextArea","Button","CommentItem","author","created","isOwner","answerId","questionId","commentId","setQuestion","children","authState","isAdmin","authAxios","editMode","setEditMode","handleDeleteComment","res","window","confirm","data","handleEditComment","commentContainer","comment","values","setStatus","resetForm","put","response","message","object","string","required","min","max","errors","touched","status","handleChange","handleBlur","handleSubmit","isSubmitting","container","button","owner","undefined","dateText","Date","userInfo","username"],"sources":["C:/Users/TUYEN/Documents/ITSS/Clone-helper-FE/components/post/comment-list/comment-item/index.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport Link from 'next/link'\r\nimport format from 'date-fns/format'\r\n\r\nimport { AuthContext } from '../../../../store/auth'\r\nimport { FetchContext } from '../../../../store/fetch'\r\n\r\nimport styles from './comment-item.module.css'\r\nimport { Space } from 'antd'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport TextArea from '../../../textarea'\r\nimport Button from '../../../button'\r\n\r\nconst CommentItem = ({\r\n  author,\r\n  created,\r\n  isOwner,\r\n  answerId,\r\n  questionId,\r\n  commentId,\r\n  setQuestion,\r\n  children\r\n}) => {\r\n  const { authState, isAdmin } = useContext(AuthContext)\r\n  const { authAxios } = useContext(FetchContext)\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const handleDeleteComment = async () => {\r\n    const res = window.confirm('Are you sure delete your comment?')\r\n    if (res) {\r\n      const { data } = await authAxios.delete(\r\n        answerId\r\n          ? `/comment/${questionId}/${answerId}/${commentId}`\r\n          : `/comment/${questionId}/${commentId}`\r\n      )\r\n\r\n      setQuestion(data)\r\n    }\r\n  }\r\n  const handleEditComment = async () => {\r\n    setEditMode(true)\r\n  }\r\n  return (\r\n    <div className={styles.commentContainer}>\r\n      {!editMode ? (\r\n        <>\r\n          <p>{children} –</p> &nbsp;\r\n        </>\r\n      ) : (\r\n        <Formik\r\n          initialValues={{ comment: children }}\r\n          onSubmit={async (values, { setStatus, resetForm }) => {\r\n            try {\r\n              const { data } = await authAxios.put(\r\n                answerId\r\n                  ? `/comment/${questionId}/${answerId}/${commentId}`\r\n                  : `/comment/${questionId}/${commentId}`,\r\n                values\r\n              )\r\n              setQuestion(data)\r\n              resetForm({})\r\n              setEditMode(false)\r\n            } catch (error) {\r\n              setStatus(error.response.data.message)\r\n            }\r\n          }}\r\n          validationSchema={Yup.object({\r\n            comment: Yup.string()\r\n              .required('comment is missing.')\r\n              .min(6, 'comment must be at least 6 characters.')\r\n              .max(1000, 'comment cannot be longer than 1000 characters.')\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            status,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n              <TextArea\r\n                name=\"comment\"\r\n                autoComplete=\"off\"\r\n                value={values.comment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                hasError={touched.comment && errors.comment}\r\n                errorMessage={errors.comment && errors.comment}\r\n              />\r\n              <p className={styles.status}>{status}</p>\r\n              <Space>\r\n                <Button\r\n                  className={styles.button}\r\n                  type=\"submit\"\r\n                  primary\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Edit Comment\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setEditMode(false)\r\n                  }}\r\n                  type=\"text\"\r\n                  className={styles.delete}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Space>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      )}\r\n      <Link href=\"/users/[user]\" as={`/users/${author}`}>\r\n        <a className={isOwner ? styles.owner : undefined}>{author}</a>\r\n      </Link>\r\n      &nbsp;\r\n      <p className={styles.dateText}>\r\n        {format(new Date(created), \"MMM dd'`'yy 'at' k':'mm\")}{' '}\r\n      </p>\r\n      {(authState.userInfo?.username === author || isAdmin()) && !editMode && (\r\n        <Space>\r\n          <a className={styles.delete} onClick={() => handleDeleteComment()}>\r\n            delete\r\n          </a>\r\n          <a onClick={() => handleEditComment()}>edit</a>\r\n        </Space>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentItem\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}