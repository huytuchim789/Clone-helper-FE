{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TUYEN\\\\Documents\\\\ITSS\\\\Clone-helper-FE\\\\components\\\\post\\\\comment-list\\\\comment-item\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport Link from 'next/link';\nimport format from 'date-fns/format';\nimport { AuthContext } from '../../../../store/auth';\nimport { FetchContext } from '../../../../store/fetch';\nimport styles from './comment-item.module.css';\nimport { Space } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport TextArea from '../../../textarea';\nimport Button from '../../../button';\nconst CommentItem = ({\n  author,\n  created,\n  isOwner,\n  answerId,\n  questionId,\n  commentId,\n  setQuestion,\n  children\n}) => {\n  var _authState$userInfo;\n  const {\n    authState,\n    isAdmin\n  } = useContext(AuthContext);\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  const {\n    0: editMode,\n    1: setEditMode\n  } = useState(false);\n  const handleDeleteComment = async () => {\n    const res = window.confirm('Are you sure delete your comment?');\n    if (res) {\n      const {\n        data\n      } = await authAxios.delete(answerId ? `/comment/${questionId}/${answerId}/${commentId}` : `/comment/${questionId}/${commentId}`);\n      setQuestion(data);\n    }\n  };\n  const handleEditComment = async () => {\n    setEditMode(true);\n  };\n  return __jsx(\"div\", {\n    className: styles.commentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, !editMode ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, children, \" \\u2013\"), \" \\xA0\") : __jsx(Formik, {\n    initialValues: {\n      comment: children\n    },\n    onSubmit: async (values, {\n      setStatus,\n      resetForm\n    }) => {\n      try {\n        const {\n          data\n        } = await authAxios.put(answerId ? `/comment/${questionId}/${answerId}/${commentId}` : `/comment/${questionId}/${commentId}`, values);\n        setQuestion(data);\n        resetForm({});\n        setEditMode(false);\n      } catch (error) {\n        setStatus(error.response.data.message);\n      }\n    },\n    validationSchema: Yup.object({\n      comment: Yup.string().required('comment is missing.').min(6, 'comment must be at least 6 characters.').max(1000, 'comment cannot be longer than 1000 characters.')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    status,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => __jsx(\"form\", {\n    className: styles.container,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(TextArea, {\n    name: \"comment\",\n    autoComplete: \"off\",\n    value: values.comment,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    hasError: touched.comment && errors.comment,\n    errorMessage: errors.comment && errors.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    className: styles.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, status), __jsx(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    className: styles.button,\n    type: \"submit\",\n    primary: true,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Edit Comment\"), __jsx(Button, {\n    onClick: () => {\n      setEditMode(false);\n    },\n    type: \"text\",\n    className: styles.delete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))), __jsx(Link, {\n    href: \"/users/[user]\",\n    as: `/users/${author}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: isOwner ? styles.owner : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, author)), \"\\xA0\", __jsx(\"p\", {\n    className: styles.dateText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, format(new Date(created), \"MMM dd'`'yy 'at' k':'mm\"), ' '), (((_authState$userInfo = authState.userInfo) === null || _authState$userInfo === void 0 ? void 0 : _authState$userInfo.username) === author || isAdmin()) && !editMode && __jsx(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: styles.delete,\n    onClick: () => handleDeleteComment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"delete\"), __jsx(\"a\", {\n    onClick: () => handleEditComment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"edit\")));\n};\nexport default CommentItem;","map":{"version":3,"names":["React","useContext","useState","Link","format","AuthContext","FetchContext","styles","Space","Formik","Yup","TextArea","Button","CommentItem","author","created","isOwner","answerId","questionId","commentId","setQuestion","children","authState","isAdmin","authAxios","editMode","setEditMode","handleDeleteComment","res","window","confirm","data","delete","handleEditComment","commentContainer","comment","values","setStatus","resetForm","put","error","response","message","object","string","required","min","max","errors","touched","status","handleChange","handleBlur","handleSubmit","isSubmitting","container","button","owner","undefined","dateText","Date","userInfo","username"],"sources":["C:/Users/TUYEN/Documents/ITSS/Clone-helper-FE/components/post/comment-list/comment-item/index.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport Link from 'next/link'\r\nimport format from 'date-fns/format'\r\n\r\nimport { AuthContext } from '../../../../store/auth'\r\nimport { FetchContext } from '../../../../store/fetch'\r\n\r\nimport styles from './comment-item.module.css'\r\nimport { Space } from 'antd'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport TextArea from '../../../textarea'\r\nimport Button from '../../../button'\r\n\r\nconst CommentItem = ({\r\n  author,\r\n  created,\r\n  isOwner,\r\n  answerId,\r\n  questionId,\r\n  commentId,\r\n  setQuestion,\r\n  children\r\n}) => {\r\n  const { authState, isAdmin } = useContext(AuthContext)\r\n  const { authAxios } = useContext(FetchContext)\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const handleDeleteComment = async () => {\r\n    const res = window.confirm('Are you sure delete your comment?')\r\n    if (res) {\r\n      const { data } = await authAxios.delete(\r\n        answerId\r\n          ? `/comment/${questionId}/${answerId}/${commentId}`\r\n          : `/comment/${questionId}/${commentId}`\r\n      )\r\n\r\n      setQuestion(data)\r\n    }\r\n  }\r\n  const handleEditComment = async () => {\r\n    setEditMode(true)\r\n  }\r\n  return (\r\n    <div className={styles.commentContainer}>\r\n      {!editMode ? (\r\n        <>\r\n          <p>{children} â€“</p> &nbsp;\r\n        </>\r\n      ) : (\r\n        <Formik\r\n          initialValues={{ comment: children }}\r\n          onSubmit={async (values, { setStatus, resetForm }) => {\r\n            try {\r\n              const { data } = await authAxios.put(\r\n                answerId\r\n                  ? `/comment/${questionId}/${answerId}/${commentId}`\r\n                  : `/comment/${questionId}/${commentId}`,\r\n                values\r\n              )\r\n              setQuestion(data)\r\n              resetForm({})\r\n              setEditMode(false)\r\n            } catch (error) {\r\n              setStatus(error.response.data.message)\r\n            }\r\n          }}\r\n          validationSchema={Yup.object({\r\n            comment: Yup.string()\r\n              .required('comment is missing.')\r\n              .min(6, 'comment must be at least 6 characters.')\r\n              .max(1000, 'comment cannot be longer than 1000 characters.')\r\n          })}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            status,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <form className={styles.container} onSubmit={handleSubmit}>\r\n              <TextArea\r\n                name=\"comment\"\r\n                autoComplete=\"off\"\r\n                value={values.comment}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                hasError={touched.comment && errors.comment}\r\n                errorMessage={errors.comment && errors.comment}\r\n              />\r\n              <p className={styles.status}>{status}</p>\r\n              <Space>\r\n                <Button\r\n                  className={styles.button}\r\n                  type=\"submit\"\r\n                  primary\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Edit Comment\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setEditMode(false)\r\n                  }}\r\n                  type=\"text\"\r\n                  className={styles.delete}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Space>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      )}\r\n      <Link href=\"/users/[user]\" as={`/users/${author}`}>\r\n        <a className={isOwner ? styles.owner : undefined}>{author}</a>\r\n      </Link>\r\n      &nbsp;\r\n      <p className={styles.dateText}>\r\n        {format(new Date(created), \"MMM dd'`'yy 'at' k':'mm\")}{' '}\r\n      </p>\r\n      {(authState.userInfo?.username === author || isAdmin()) && !editMode && (\r\n        <Space>\r\n          <a className={styles.delete} onClick={() => handleDeleteComment()}>\r\n            delete\r\n          </a>\r\n          <a onClick={() => handleEditComment()}>edit</a>\r\n        </Space>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentItem\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,KAAK,QAAQ,MAAM;AAC5B,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,MAAMC,WAAW,GAAG,CAAC;EACnBC,MAAM;EACNC,OAAO;EACPC,OAAO;EACPC,QAAQ;EACRC,UAAU;EACVC,SAAS;EACTC,WAAW;EACXC;AACF,CAAC,KAAK;EAAA;EACJ,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGtB,UAAU,CAACI,WAAW,CAAC;EACtD,MAAM;IAAEmB;EAAU,CAAC,GAAGvB,UAAU,CAACK,YAAY,CAAC;EAC9C,MAAM;IAAA,GAACmB,QAAQ;IAAA,GAAEC;EAAW,IAAIxB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMyB,mBAAmB,GAAG,YAAY;IACtC,MAAMC,GAAG,GAAGC,MAAM,CAACC,OAAO,CAAC,mCAAmC,CAAC;IAC/D,IAAIF,GAAG,EAAE;MACP,MAAM;QAAEG;MAAK,CAAC,GAAG,MAAMP,SAAS,CAACQ,MAAM,CACrCf,QAAQ,GACH,YAAWC,UAAW,IAAGD,QAAS,IAAGE,SAAU,EAAC,GAChD,YAAWD,UAAW,IAAGC,SAAU,EAAC,CAC1C;MAEDC,WAAW,CAACW,IAAI,CAAC;IACnB;EACF,CAAC;EACD,MAAME,iBAAiB,GAAG,YAAY;IACpCP,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EACD,OACE;IAAK,SAAS,EAAEnB,MAAM,CAAC2B,gBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrC,CAACT,QAAQ,GACR,4BACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIJ,QAAQ,YAAO,UAClB,GAEH,MAAC,MAAM;IACL,aAAa,EAAE;MAAEc,OAAO,EAAEd;IAAS,CAAE;IACrC,QAAQ,EAAE,OAAOe,MAAM,EAAE;MAAEC,SAAS;MAAEC;IAAU,CAAC,KAAK;MACpD,IAAI;QACF,MAAM;UAAEP;QAAK,CAAC,GAAG,MAAMP,SAAS,CAACe,GAAG,CAClCtB,QAAQ,GACH,YAAWC,UAAW,IAAGD,QAAS,IAAGE,SAAU,EAAC,GAChD,YAAWD,UAAW,IAAGC,SAAU,EAAC,EACzCiB,MAAM,CACP;QACDhB,WAAW,CAACW,IAAI,CAAC;QACjBO,SAAS,CAAC,CAAC,CAAC,CAAC;QACbZ,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdH,SAAS,CAACG,KAAK,CAACC,QAAQ,CAACV,IAAI,CAACW,OAAO,CAAC;MACxC;IACF,CAAE;IACF,gBAAgB,EAAEhC,GAAG,CAACiC,MAAM,CAAC;MAC3BR,OAAO,EAAEzB,GAAG,CAACkC,MAAM,EAAE,CAClBC,QAAQ,CAAC,qBAAqB,CAAC,CAC/BC,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,GAAG,CAAC,IAAI,EAAE,gDAAgD;IAC/D,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF,CAAC;IACAX,MAAM;IACNY,MAAM;IACNC,OAAO;IACPC,MAAM;IACNC,YAAY;IACZC,UAAU;IACVC,YAAY;IACZC;EACF,CAAC,KACC;IAAM,SAAS,EAAE/C,MAAM,CAACgD,SAAU;IAAC,QAAQ,EAAEF,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxD,MAAC,QAAQ;IACP,IAAI,EAAC,SAAS;IACd,YAAY,EAAC,KAAK;IAClB,KAAK,EAAEjB,MAAM,CAACD,OAAQ;IACtB,QAAQ,EAAEgB,YAAa;IACvB,MAAM,EAAEC,UAAW;IACnB,QAAQ,EAAEH,OAAO,CAACd,OAAO,IAAIa,MAAM,CAACb,OAAQ;IAC5C,YAAY,EAAEa,MAAM,CAACb,OAAO,IAAIa,MAAM,CAACb,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC/C,EACF;IAAG,SAAS,EAAE5B,MAAM,CAAC2C,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,MAAM,CAAK,EACzC,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACJ,MAAC,MAAM;IACL,SAAS,EAAE3C,MAAM,CAACiD,MAAO;IACzB,IAAI,EAAC,QAAQ;IACb,OAAO;IACP,QAAQ,EAAEF,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAGhB,EACT,MAAC,MAAM;IACL,OAAO,EAAE,MAAM;MACb5B,WAAW,CAAC,KAAK,CAAC;IACpB,CAAE;IACF,IAAI,EAAC,MAAM;IACX,SAAS,EAAEnB,MAAM,CAACyB,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAGlB,CACH,CAEX,CAEJ,EACD,MAAC,IAAI;IAAC,IAAI,EAAC,eAAe;IAAC,EAAE,EAAG,UAASlB,MAAO,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChD;IAAG,SAAS,EAAEE,OAAO,GAAGT,MAAM,CAACkD,KAAK,GAAGC,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAE5C,MAAM,CAAK,CACzD,UAEP;IAAG,SAAS,EAAEP,MAAM,CAACoD,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3BvD,MAAM,CAAC,IAAIwD,IAAI,CAAC7C,OAAO,CAAC,EAAE,yBAAyB,CAAC,EAAE,GAAG,CACxD,EACH,CAAC,wBAAAO,SAAS,CAACuC,QAAQ,wDAAlB,oBAAoBC,QAAQ,MAAKhD,MAAM,IAAIS,OAAO,EAAE,KAAK,CAACE,QAAQ,IAClE,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACJ;IAAG,SAAS,EAAElB,MAAM,CAACyB,MAAO;IAAC,OAAO,EAAE,MAAML,mBAAmB,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAE9D,EACJ;IAAG,OAAO,EAAE,MAAMM,iBAAiB,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAAS,CAElD,CACG;AAEV,CAAC;AAED,eAAepB,WAAW"},"metadata":{},"sourceType":"module"}