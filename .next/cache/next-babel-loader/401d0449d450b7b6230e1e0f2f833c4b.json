{"ast":null,"code":"import { useState, useEffect, useRef } from 'react';\nfunction useComponentVisible(initialIsVisible) {\n  const {\n    0: isComponentVisible,\n    1: setIsComponentVisible\n  } = useState(initialIsVisible);\n  const ref = useRef(null);\n  const toggleRef = useRef(null);\n  const handleHide = event => {\n    if (event.key === 'Escape') {\n      setIsComponentVisible(false);\n    }\n  };\n  const handleClickOutside = event => {\n    var _toggleRef$current;\n    if (ref.current && !ref.current.contains(event.target) && !(toggleRef !== null && toggleRef !== void 0 && (_toggleRef$current = toggleRef.current) !== null && _toggleRef$current !== void 0 && _toggleRef$current.contains(event.target))) {\n      setIsComponentVisible(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    document.addEventListener('keydown', handleHide, true);\n    return () => {\n      document.removeEventListener('keydown', handleHide, true);\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  });\n  return {\n    ref,\n    toggleRef,\n    isComponentVisible,\n    setIsComponentVisible\n  };\n}\nexport default useComponentVisible;","map":{"version":3,"names":["useState","useEffect","useRef","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","toggleRef","handleHide","event","key","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener"],"sources":["C:/Users/TUYEN/Documents/ITSS/Clone-helper-FE/hooks/useComponentVisible.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\n\r\nfunction useComponentVisible(initialIsVisible) {\r\n  const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible)\r\n  const ref = useRef(null)\r\n  const toggleRef = useRef(null)\r\n\r\n  const handleHide = (event) => {\r\n    if (event.key === 'Escape') {\r\n      setIsComponentVisible(false)\r\n    }\r\n  }\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (\r\n      ref.current &&\r\n      !ref.current.contains(event.target) &&\r\n      !toggleRef?.current?.contains(event.target)\r\n    ) {\r\n      setIsComponentVisible(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, true)\r\n    document.addEventListener('keydown', handleHide, true)\r\n    return () => {\r\n      document.removeEventListener('keydown', handleHide, true)\r\n      document.removeEventListener('click', handleClickOutside, true)\r\n    }\r\n  })\r\n\r\n  return { ref, toggleRef, isComponentVisible, setIsComponentVisible }\r\n}\r\n\r\nexport default useComponentVisible\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,SAASC,mBAAmB,CAACC,gBAAgB,EAAE;EAC7C,MAAM;IAAA,GAACC,kBAAkB;IAAA,GAAEC;EAAqB,IAAIN,QAAQ,CAACI,gBAAgB,CAAC;EAC9E,MAAMG,GAAG,GAAGL,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMM,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;MAC1BL,qBAAqB,CAAC,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAIF,KAAK,IAAK;IAAA;IACpC,IACEH,GAAG,CAACM,OAAO,IACX,CAACN,GAAG,CAACM,OAAO,CAACC,QAAQ,CAACJ,KAAK,CAACK,MAAM,CAAC,IACnC,EAACP,SAAS,aAATA,SAAS,qCAATA,SAAS,CAAEK,OAAO,+CAAlB,mBAAoBC,QAAQ,CAACJ,KAAK,CAACK,MAAM,CAAC,GAC3C;MACAT,qBAAqB,CAAC,KAAK,CAAC;IAC9B;EACF,CAAC;EAEDL,SAAS,CAAC,MAAM;IACde,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEL,kBAAkB,EAAE,IAAI,CAAC;IAC5DI,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAER,UAAU,EAAE,IAAI,CAAC;IACtD,OAAO,MAAM;MACXO,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAET,UAAU,EAAE,IAAI,CAAC;MACzDO,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEN,kBAAkB,EAAE,IAAI,CAAC;IACjE,CAAC;EACH,CAAC,CAAC;EAEF,OAAO;IAAEL,GAAG;IAAEC,SAAS;IAAEH,kBAAkB;IAAEC;EAAsB,CAAC;AACtE;AAEA,eAAeH,mBAAmB"},"metadata":{},"sourceType":"module"}