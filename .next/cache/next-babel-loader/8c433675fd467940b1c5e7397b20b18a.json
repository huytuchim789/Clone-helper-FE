{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\TUYEN\\\\Documents\\\\ITSS\\\\Clone-helper-FE\\\\pages\\\\questions\\\\[slug].js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport PageTitle from '../../components/page-title';\nimport DetailPageContainer from '../../components/detail-page-container';\nimport PostWrapper from '../../components/post/post-wrapper';\nimport PostVote from '../../components/post/post-vote';\nimport PostSummary from '../../components/post/post-summary';\nimport CommentList from '../../components/post/comment-list';\nimport CommentItem from '../../components/post/comment-list/comment-item';\nimport AnswerContainer from '../../components/answer-container';\nimport AddAnswer from '../../components/add-answer';\nimport { Spinner } from '../../components/icons';\nvar QuestionDetail = function QuestionDetail(_ref) {\n  _s();\n  var questionId = _ref.questionId,\n    title = _ref.title;\n  var _useState = useState(null),\n    question = _useState[0],\n    setQuestion = _useState[1];\n  var _useState2 = useState('Votes'),\n    answerSortType = _useState2[0],\n    setAnswersSortType = _useState2[1];\n  useEffect(function () {\n    var fetchQuestion = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$publicFetch$ge, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return publicFetch.get(\"/question/\".concat(questionId));\n              case 2:\n                _yield$publicFetch$ge = _context.sent;\n                data = _yield$publicFetch$ge.data;\n                setQuestion(data);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function fetchQuestion() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchQuestion();\n  }, []);\n  var handleSorting = function handleSorting() {\n    switch (answerSortType) {\n      case 'Votes':\n        return function (a, b) {\n          return b.score - a.score;\n        };\n      case 'Newest':\n        return function (a, b) {\n          return new Date(b.created) - new Date(a.created);\n        };\n      case 'Oldest':\n        return function (a, b) {\n          return new Date(a.created) - new Date(b.created);\n        };\n      default:\n        break;\n    }\n  };\n  var isClient = true;\n  console.log('ádsad', question);\n  return __jsx(Layout, {\n    extra: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: isClient && window.location.href,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(PageTitle, {\n    title: title,\n    button: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(DetailPageContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, !question && __jsx(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), question && __jsx(React.Fragment, null, __jsx(PostWrapper, {\n    borderBottom: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(PostVote, {\n    score: question.score,\n    votes: question.votes,\n    questionId: questionId,\n    setQuestion: setQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), __jsx(PostSummary, {\n    tags: question.tags,\n    author: question.author,\n    created: question.created,\n    questionId: questionId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, question.text), __jsx(CommentList, {\n    questionId: questionId,\n    setQuestion: setQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, question.comments.map(function (_ref3) {\n    var id = _ref3.id,\n      author = _ref3.author,\n      created = _ref3.created,\n      body = _ref3.body;\n    return __jsx(CommentItem, {\n      key: id,\n      commentId: id,\n      questionId: questionId,\n      author: author.username,\n      isOwner: author.username === question.author.username,\n      created: created,\n      setQuestion: setQuestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, body);\n  }))), question.answers.length > 0 && __jsx(AnswerContainer, {\n    answersCount: question.answers.length,\n    answerSortType: answerSortType,\n    setAnswerSortType: setAnswersSortType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, question.answers.sort(handleSorting()).map(function (answer) {\n    return __jsx(PostWrapper, {\n      key: answer.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, __jsx(PostVote, {\n      score: answer.score,\n      votes: answer.votes,\n      answerId: answer.id,\n      questionId: questionId,\n      setQuestion: setQuestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), __jsx(PostSummary, {\n      author: answer.author,\n      created: answer.created,\n      questionId: questionId,\n      answerId: answer.id,\n      setQuestion: setQuestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, answer.text), __jsx(CommentList, {\n      questionId: questionId,\n      answerId: answer.id,\n      setQuestion: setQuestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, answer.comments.map(function (_ref4) {\n      var id = _ref4.id,\n        author = _ref4.author,\n        created = _ref4.created,\n        body = _ref4.body;\n      return __jsx(CommentItem, {\n        key: id,\n        commentId: id,\n        questionId: questionId,\n        answerId: answer.id,\n        author: author.username,\n        isOwner: author.username === question.author.username,\n        created: created,\n        setQuestion: setQuestion,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, body);\n    })));\n  })), __jsx(AddAnswer, {\n    tags: question.tags,\n    id: questionId,\n    setQuestion: setQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }))));\n};\n_s(QuestionDetail, \"hkNSRtGMzMehBBAzYtk5qbqsy4U=\");\n_c = QuestionDetail;\nexport var __N_SSP = true;\nexport default QuestionDetail;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetail\");","map":{"version":3,"names":["React","useEffect","useState","Head","publicFetch","Layout","PageTitle","DetailPageContainer","PostWrapper","PostVote","PostSummary","CommentList","CommentItem","AnswerContainer","AddAnswer","Spinner","QuestionDetail","questionId","title","question","setQuestion","answerSortType","setAnswersSortType","fetchQuestion","get","data","handleSorting","a","b","score","Date","created","isClient","console","log","window","location","href","votes","tags","author","text","comments","map","id","body","username","answers","length","sort","answer"],"sources":["C:/Users/TUYEN/Documents/ITSS/Clone-helper-FE/pages/questions/[slug].js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Head from 'next/head'\r\n\r\nimport { publicFetch } from '../../util/fetcher'\r\n\r\nimport Layout from '../../components/layout'\r\nimport PageTitle from '../../components/page-title'\r\nimport DetailPageContainer from '../../components/detail-page-container'\r\nimport PostWrapper from '../../components/post/post-wrapper'\r\nimport PostVote from '../../components/post/post-vote'\r\nimport PostSummary from '../../components/post/post-summary'\r\nimport CommentList from '../../components/post/comment-list'\r\nimport CommentItem from '../../components/post/comment-list/comment-item'\r\nimport AnswerContainer from '../../components/answer-container'\r\nimport AddAnswer from '../../components/add-answer'\r\nimport { Spinner } from '../../components/icons'\r\n\r\nconst QuestionDetail = ({ questionId, title }) => {\r\n  const [question, setQuestion] = useState(null)\r\n  const [answerSortType, setAnswersSortType] = useState('Votes')\r\n\r\n  useEffect(() => {\r\n    const fetchQuestion = async () => {\r\n      const { data } = await publicFetch.get(`/question/${questionId}`)\r\n      setQuestion(data)\r\n    }\r\n\r\n    fetchQuestion()\r\n  }, [])\r\n\r\n  const handleSorting = () => {\r\n    switch (answerSortType) {\r\n      case 'Votes':\r\n        return (a, b) => b.score - a.score\r\n      case 'Newest':\r\n        return (a, b) => new Date(b.created) - new Date(a.created)\r\n      case 'Oldest':\r\n        return (a, b) => new Date(a.created) - new Date(b.created)\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const isClient = typeof window === 'object'\r\n  console.log('ádsad', question)\r\n  return (\r\n    <Layout extra={false}>\r\n      <Head>\r\n        <title>{title}</title>\r\n        <link rel=\"canonical\" href={isClient && window.location.href}></link>\r\n      </Head>\r\n\r\n      <PageTitle title={title} button />\r\n\r\n      <DetailPageContainer>\r\n        {!question && (\r\n          <div className=\"loading\">\r\n            <Spinner />\r\n          </div>\r\n        )}\r\n\r\n        {question && (\r\n          <>\r\n            <PostWrapper borderBottom={false}>\r\n              <PostVote\r\n                score={question.score}\r\n                votes={question.votes}\r\n                questionId={questionId}\r\n                setQuestion={setQuestion}\r\n              />\r\n              <PostSummary\r\n                tags={question.tags}\r\n                author={question.author}\r\n                created={question.created}\r\n                questionId={questionId}\r\n              >\r\n                {question.text}\r\n              </PostSummary>\r\n              <CommentList questionId={questionId} setQuestion={setQuestion}>\r\n                {question.comments.map(({ id, author, created, body }) => (\r\n                  <CommentItem\r\n                    key={id}\r\n                    commentId={id}\r\n                    questionId={questionId}\r\n                    author={author.username}\r\n                    isOwner={author.username === question.author.username}\r\n                    created={created}\r\n                    setQuestion={setQuestion}\r\n                  >\r\n                    {body}\r\n                  </CommentItem>\r\n                ))}\r\n              </CommentList>\r\n            </PostWrapper>\r\n\r\n            {question.answers.length > 0 && (\r\n              <AnswerContainer\r\n                answersCount={question.answers.length}\r\n                answerSortType={answerSortType}\r\n                setAnswerSortType={setAnswersSortType}\r\n              >\r\n                {question.answers.sort(handleSorting()).map((answer) => (\r\n                  <PostWrapper key={answer.id}>\r\n                    <PostVote\r\n                      score={answer.score}\r\n                      votes={answer.votes}\r\n                      answerId={answer.id}\r\n                      questionId={questionId}\r\n                      setQuestion={setQuestion}\r\n                    />\r\n                    <PostSummary\r\n                      author={answer.author}\r\n                      created={answer.created}\r\n                      questionId={questionId}\r\n                      answerId={answer.id}\r\n                      setQuestion={setQuestion}\r\n                    >\r\n                      {answer.text}\r\n                    </PostSummary>\r\n                    <CommentList\r\n                      questionId={questionId}\r\n                      answerId={answer.id}\r\n                      setQuestion={setQuestion}\r\n                    >\r\n                      {answer.comments.map(({ id, author, created, body }) => (\r\n                        <CommentItem\r\n                          key={id}\r\n                          commentId={id}\r\n                          questionId={questionId}\r\n                          answerId={answer.id}\r\n                          author={author.username}\r\n                          isOwner={author.username === question.author.username}\r\n                          created={created}\r\n                          setQuestion={setQuestion}\r\n                        >\r\n                          {body}\r\n                        </CommentItem>\r\n                      ))}\r\n                    </CommentList>\r\n                  </PostWrapper>\r\n                ))}\r\n              </AnswerContainer>\r\n            )}\r\n\r\n            <AddAnswer\r\n              tags={question.tags}\r\n              id={questionId}\r\n              setQuestion={setQuestion}\r\n            />\r\n          </>\r\n        )}\r\n      </DetailPageContainer>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const slug = context.params.slug\r\n  const questionId = slug.split('-').shift()\r\n  const title = slug\r\n    ?.substr(slug.indexOf('-') + 1)\r\n    .split('-')\r\n    .join(' ')\r\n\r\n  return {\r\n    props: {\r\n      questionId,\r\n      title\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuestionDetail\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}